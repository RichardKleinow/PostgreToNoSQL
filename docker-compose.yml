version: '3.5'

services:

  postgres:
    container_name: postgres_container
    image: postgres:latest
    restart: unless-stopped
    volumes:
        - ./postgres:/data/dump
        - ./postgres/init-dump.sh:/docker-entrypoint-initdb.d/init-dump.sh
    environment: 
        POSTGRES_USER: ${POSTGRES_USER:-postgres}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
        PGDATA: /data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
      
      
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@admin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
        - ./pgadmin/servers.json:/pgadmin4/servers.json
        - ./pgadmin/pgpass:/pgpass
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres 
    entrypoint: >
      /bin/sh -c "
      cp -f /pgpass /var/lib/pgadmin/;
      chmod 600 /var/lib/pgadmin/pgpass;
      chown pgadmin:pgadmin /var/lib/pgadmin/pgpass;
      /entrypoint.sh
      "
    
  mongo:
    container_name: mongo_container
    image: mongo:latest
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    networks:
      - postgres

  mongo-express:
    container_name: mongo-express_container
    image: mongo-express:latest
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
    networks:
      - postgres
      
      
  python:
    container_name: python_container
    image: python:latest
    restart: unless-stopped
    volumes:
      - ./python/requirements.txt:/requirements.txt
      - ./python/src:/usr/src/app
    entrypoint: >
      /bin/sh -c "
      python --version;
      pip install -r requirements.txt --root-user-action=ignore;
      "
    networks:
      - postgres
    
    

      
networks:
  postgres:
    driver: bridge